name: Update ZXingCpp SPM package

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

jobs:
  update:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get latest release
        id: get_latest_release
        run: |
          curl -s https://api.github.com/repos/zxing-cpp/zxing-cpp/releases/latest | jq -r '.tag_name' > latest_version
          echo "Latest release version: $(cat latest_version)"
        shell: bash

      - name: Check if latest release
        run: |
          if [ "$(cat latest_version)" = "$(cat current_version)" ]; then
            echo "Already at the latest version."
            exit 1
          fi
        shell: bash
        continue-on-error: false

      - name: Build
        run: ./build.sh

      - name: Compute checksum
        id: checksum
        run: |
          swift package compute-checksum $GITHUB_WORKSPACE/ZXingCpp.xcframework.zip > checksum
          echo "Checksum: $(cat checksum)"
        shell: bash

      - name: Update Package.swift
        run: |
          sed -i '' -e "s/checksum:.*/checksum: \"$(cat checksum)\"/" Package.swift
          sed -i '' -e "s/\\/zxing-cpp-ios-xcframework\\/releases\\/download\\/.*\\//\\/zxing-cpp-ios-xcframework\\/releases\\/download\\/$1\\//" Package.swift
        shell: bash
        env:
          1: ${{ steps.get_latest_release.outputs.tag_name }}

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_latest_release.outputs.tag_name }}
          release_name: ${{ steps.get_latest_release.outputs.tag_name }}
          body: ${{ steps.get_latest_release.outputs.body }}
          draft: false
          prerelease: false
        continue-on-error: false

      - name: Upload asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ZXingCpp.xcframework.zip
          asset_name: ZXingCpp.xcframework.zip
          asset_content_type: application/zip

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add Package.swift
          git commit -m "Update Package.swift"
          git push
        env:
          GIT_COMMITTER_NAME: GitHub Action
          GIT_COMMITTER_EMAIL: action@github.com
          GIT_AUTHOR_NAME: GitHub Action
          GIT_AUTHOR_EMAIL: action@github.com
