name: Update ZXingCpp SPM package

on:
  schedule:
    - cron: '0 0 * * *' # Runs every day at midnight UTC

jobs:
  check-version-and-build:
    runs-on: macos-latest
    steps:
      - name: Get latest remote release version
        id: latest-version
        run: |
          # Use the GitHub API to get the latest release version from zxing-cpp repository
          echo "::set-output name=version::$(curl -s https://api.github.com/repos/zxing-cpp/zxing-cpp/releases/latest | jq -r '.tag_name')"
      - name: Get current released version
        id: current-version
        run: |
          # Use git describe to get the latest tagged version of the current repository
          echo "::set-output name=version::$(git describe --tags --abbrev=0)"
      - name: Compare versions
        id: compare-versions
        run: |
          # Compare the latest remote release version to the current released version
          if [[ "${{ steps.latest-version.outputs.version }}" == "${{ steps.current-version.outputs.version }}" ]]; then
            echo "Current version is up-to-date."
            exit 1
          elif ! [[ "${{ steps.latest-version.outputs.version }}" > "${{ steps.current-version.outputs.version }}" ]]; then
            echo "Latest version is older than or equal to current version."
            exit 1
          fi
      - name: Checkout latest commit and update submodules
        run: |
          # Checkout the latest commit of the current repository and update submodules
          git checkout master
          git pull
          git submodule update --init --recursive
      - name: Build ZXingCpp
        run: ./build.sh
      - name: Compute checksum
        id: checksum
        run: |
          # Compute the SHA-256 checksum of the ZXingCpp.xcframework.zip
          cd .build/release
          swift package compute-checksum ZXingCpp.xcframework.zip | awk '{print $1}' > checksum
        shell: bash
      - name: Update Package.swift
        run: |
          # Replace the version and checksum in Package.swift with the latest remote release version and checksum
          sed -i '' "s/\(url: \"https:\/\/github\.com\/zxing-cpp\/zxing-cpp\/archive\/\)\(.*\)\(.zip\", checksum: \"\)\(.*\)\(\".*\)/\1${{ steps.latest-version.outputs.version }}\3$(cat .build/release/checksum)\5/" Package.swift
      - name: Create new release and upload asset
        uses: actions/upload-release-asset@v1
        with:
          # Use the GitHub API to upload the asset to the new release
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: .build/release/ZXingCpp.xcframework.zip
          asset_name: ZXingCpp.xcframework.zip
          asset_content_type: application/zip
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Commit Package.swift
        run: |
          # Commit the updated Package.swift file
          git add Package.swift
          git commit -m "Bump version to ${{ steps.latest-version.outputs.version }}"
          git push
