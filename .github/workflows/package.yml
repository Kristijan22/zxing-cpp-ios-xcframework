name: Update ZXingCpp SPM package

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' # Runs every day at midnight UTC
permissions:
  contents: write
jobs:
  check-version-and-build:
    runs-on: macos-latest
    steps:
      - name: Get latest ZXingCpp version
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/zxing-cpp/zxing-cpp/releases/latest | jq -r '.tag_name')
          if [ -z "$LATEST_VERSION" ]; then
            echo "Failed to retrieve latest version"
            exit 1
          fi
          echo "Latest version: $LATEST_VERSION"
          echo "latest_version=$LATEST_VERSION" >> $GITHUB_ENV
      - name: Get current XCFramework version
        run: |
          CURRENT_VERSION=$(curl -s https://github.com/Kristijan22/zxing-cpp-ios-xcframework/releases/latest | jq -r '.tag_name')
          echo "Current version: $CURRENT_VERSION"
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_ENV
      - name: Compare versions
        id: compare-versions
        run: |
          # Check if latest_version is null
          if [ ${{ env.latest_version }} == 'null' ]; then
            echo "Latest version not found."
            exit 1
          fi
          # Compare the latest remote release version to the current released version
          if [ "${{ env.latest_version }}" \> "${{ env.current_version }}" ]; then
            echo "Newer version found: ${{ env.latest_version }}"
            echo "update_needed=true" >> $GITHUB_ENV
          else
            echo "Already up-to-date."
            echo "update_needed=false" >> $GITHUB_ENV
          fi
      - name: Checkout
        if: ${{ env.update_needed == 'true' }}
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Build ZXingCpp
        if: ${{ env.update_needed == 'true' }}
        run: ./build.sh
      - name: Compute checksum
        if: ${{ env.update_needed == 'true' }}
        id: checksum
        run: |
          # Compute the SHA-256 checksum of the ZXingCpp.xcframework.zip
          echo "checksum=${{ env.CHECKSUM }}" >> $GITHUB_ENV
          echo "Checksum computed."
        shell: bash
        env:
          CHECKSUM: $(swift package compute-checksum ZXingCpp.xcframework.zip | awk '{print $1}')
      - name: Update Package.swift
        if: ${{ env.update_needed == 'true' }}
        run: |
          # Replace the version and checksum in Package.swift with the latest remote release version and checksum
          awk '{gsub(/v[0-9]+\.[0-9]+\.[0-9]+/, "${{ env.latest_version }}")}1' Package.swift > temp && mv temp Package.swift
          sed -i '' "s/checksum: \".*\"/checksum: \"${{ env.checksum }}\"/" Package.swift
          echo "Package.swift updated."
      - name: Commit Package.swift
        if: ${{ env.update_needed == 'true' }}
        run: |
          # Commit the updated Package.swift file
          git add Package.swift
          git commit -m "Bump version to ${{ env.latest_version }}"
          git push
      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ env.latest_version }}
          artifacts: "ZXingCpp.xcframework.zip"
          body: "Updating SPM package for ${{ env.latest_version }}"
          commit: "main"
          tag: ${{ env.latest_version }}
